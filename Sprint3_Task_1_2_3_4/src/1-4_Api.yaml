openapi: 3.0.3
info:
  title: Swagger Device - OpenAPI 3.0
  description: |-
    Device, Telemetry
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://device.device.io/api/v3
tags:
  - name: device
    description: Everything about your Devices
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /devices/{device_id}:
    get:
      tags:
        - device
      summary: Find device by ID
      description: Returns a single device
      operationId: getDeviceById
      parameters:
        - name: device_id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
        '500':
          description: Server error
  /devices/{device_id}/status:
    put:
      tags:
        - device
      summary: Update device
      description: This can only be done by the logged in device.
      operationId: updatedevice
      parameters:
        - name: device_id
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent device in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/xml:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        default:
          description: successful operation
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
        '422':
          description: Validation exception
        '500':
          description: Server error
  /devices/{device_id}/commands:
    post:
      tags:
        - device
      summary: Updates a device in the store with form data
      description: ''
      operationId: updateDeviceWithForm
      parameters:
        - name: device_id
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
        '500':
          description: Server error
  /devices/{device_id}/telemetry/latest:
    get:
      tags:
        - device
      summary: Find device by ID
      description: Returns a single device
      operationId: getDeviceByIdtelemetrylatest
      parameters:
        - name: device_id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Telemetry'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telemetry'
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
        '500':
          description: Server error
  /devices/{device_id}/telemetry:
    get:
      tags:
        - device
      summary: Find device by ID
      description: Returns a single device
      operationId: getDeviceByIdtelemetry
      parameters:
        - name: device_id
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Telemetry'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telemetry'
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
        '500':
          description: Server error
components:
  schemas:
    Device:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        type_id:
          type: integer
          format: int64
          example: 11
        house_id:
          type: integer
          format: int64
          example: 12
        serial_number:
          type: integer
          format: int64
          example: 13
      xml:
        name: device
    Telemetry:
      required:
        - id
        - device_id
        - temperature
        - date
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        device_id:
          type: integer
          format: int64
          example: 11
        temperature:
          type: integer
          format: int64
          example: 12
        date:
          type: string
          format: date-time
          example: 2020-10-15 14:10:38
      xml:
        name: telemetry
  requestBodies:
    Device:
      description: Deviceobject that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
        application/xml:
          schema:
            $ref: '#/components/schemas/Device'
    Telemetry:
      description: Deviceobject that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Telemetry'
        application/xml:
          schema:
            $ref: '#/components/schemas/Telemetry'
  